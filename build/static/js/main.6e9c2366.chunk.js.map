{"version":3,"sources":["components/Book.js","components/ListPicker.js","services/BookService.js","containers/SearchBookContainer.js","components/Breadcrumbs.js","containers/SearchBookPageContainer.js","components/AddReadListForm.js","components/ReadList.js","containers/ListViewContainer.js","containers/ListviewPageContainer.js","components/ReadListItem.js","containers/ReadListContainer.js","components/Library.js","containers/BookDetailsContainer.js","containers/SampleBooksContainer.js","components/FilterBooks.js","containers/RecommendContainer.js","containers/RecommendPageContainer.js","components/Input.js","containers/RegisterContainer.js","containers/LoginContainer.js","components/PrivateRoute.js","components/Notification.js","App.js","index.js"],"names":["Book","book","className","src","image_url","alt","title","authors","description","ListPicker","readLists","selected","addBookToList","map","list","id","key","onClick","name","token","fetch","method","headers","Authorization","then","response","json","newList","body","JSON","stringify","isbn","data","console","log","newToken","SearchBookContainer","history","useHistory","location","useLocation","useState","setIsbn","state","undefined","bookByIsbn","setBookByIsbn","setReadLists","primary","useEffect","BookService","listId","readlist_id","newBookByIsbn","handleChange","e","rated","onSubmit","event","preventDefault","push","pathname","resultOnSearchPage","value","onChange","target","type","stop","fractions","searchResult","Locations","require","Breadcrumbs","site","links","find","l","par","parent","reverse","to","SearchBookPageContainer","AddReadListForm","listInput","setListInput","submitForm","ReadList","ListViewContainer","inputVisible","setInputVisible","concat","catch","ListviewPageContainer","ReadListItem","item","ReadListContainer","readList","setReadList","useParams","nrId","Number","listName","Library","library","visible","setVisible","buttonText","includes","toUpperCase","libraryBook","BookDetailsContainer","props","setBook","setLibrary","authorString","split","join","result","books","Array","from","Set","goBack","length","initialRating","ratedBook","bookOnList","SampleBooksContainer","setBooks","done","setDone","readgeekid","disabled","FilterBooks","genres","genre","setGenre","g","selectedGenre","RecommendContainer","recommendations","setRecommendations","r","filteredRecommendations","filter","RecommendPageContainer","Input","label","RegisterContainer","notifyUser","email","setEmail","username","setUsername","password","setPassword","res","user","ok","style","text","LoginContainer","setUser","window","localStorage","setItem","path","taste_tested","error","status","PrivateRoute","Component","component","isAuth","rest","Notification","message","App","setMessage","setNotification","notification","setTimeout","loggedUser","getItem","parse","removeItem","ListViewPageContainer","ReactDOM","render","StrictMode","isbn13","image","document","getElementById"],"mappings":"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","file":"static/js/main.6e9c2366.chunk.js","sourcesContent":["import React from 'react'\n\nconst Book = ({book}) => {\n    return(\n        <div className='book-container'>\n            <img src={book.image_url} alt=\"cover\" />\n            <div className='book-info-container'>\n                <h1 className='title'>{book.title}</h1>\n                <h2 className='author'>{book.authors[0]}</h2>\n                <p>{book.description}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Book","import React from 'react'\n\nconst ListPicker = ({readLists, selected, addBookToList}) => {\n    const style = (id) => selected===id ? 'btn-listpicker-selected':'btn-listpicker'\n    return readLists.map(list => {\n        return <button className={style(list.id)} key={list.id} onClick={()=>addBookToList(list.id)} >{list.name}</button>\n    })\n}\n\nexport default ListPicker","import React from 'react'\n\nlet token=null\n\nconst setToken=(newToken)=> {\n    token=`Bearer ${newToken}`\n}\n\nconst getReadLists = () => {\n    return fetch('/readlists', {\n        method: 'get',\n        headers: {\n            Authorization: token\n        }\n    })\n    .then(response => response.json())\n}\n\nconst postNewList = (newList) => {\n    return fetch('/readlists', {\n        method: 'post',\n        headers: {\n            'Content-Type': 'application/json',\n            Authorization: token\n        },\n        body: JSON.stringify(newList)\n    })\n    .then(response => response.json())\n}\n\nconst getReadList = (id) => {\n    return fetch(`/readlists/${id}`, {\n        method: 'get',\n        headers: {\n            Authorization: token\n        }\n    })\n    .then(response => response.json())\n}\n\nconst addBookToList = (book) => {\n    return fetch('/books', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: token\n        },\n        body: JSON.stringify(book)\n    })\n    .then(response => response.json())\n    .then(data => {\n        console.log('success', data)\n    })\n}\n\nconst getBookByIsbn = (isbn) => {\n    return fetch(`/book/${isbn}`)\n    .then(response => response.json())\n}\n\nconst getBookDetails = (id) => {\n    return fetch(`/books/${id}`, {\n        method: 'get',\n        headers: {\n            Authorization: token\n        }\n    })\n    .then(response => response.json())\n    .then(data => {\n        return data\n    })\n}\n\nconst postRating = (data) => {\n    return fetch('/recommendations/rate', {\n        method: 'post',\n        headers: {\n            'Content-Type': 'application/json',\n            Authorization: token\n        },\n        body: JSON.stringify(data)\n    })\n    .then(response=> response.json())\n}\n\nconst getRatingSample=()=> {\n    return fetch('/recommendations/sample', {\n        method: 'get',\n        headers: {\n            Authorization: token\n        }\n    })\n    .then(response => response.json())\n}\n\nconst getRecommendations= () => {\n    return fetch('/recommendations/list', {\n        method: 'get',\n        headers: {\n            Authorization: token\n        }\n    })\n    .then(response => response.json())\n}\n\nconst setRatingDone = () => {\n    return fetch('/recommendations/rated', {\n        method: 'put',\n        headers: {\n            'Authorization': token\n        }\n    })\n}\n\nexport default{\n    getReadLists: getReadLists,\n    postNewList: postNewList,\n    getReadList: getReadList,\n    getBookByIsbn: getBookByIsbn,\n    addBookToList: addBookToList,\n    getBookDetails: getBookDetails,\n    postRating: postRating,\n    getRatingSample: getRatingSample,\n    getRecommendations: getRecommendations,\n    setRatingDone: setRatingDone,\n    setToken,\n    token \n}\n\n","import React, {useState, useEffect} from 'react';\nimport Book from '../components/Book'\nimport ListPicker from '../components/ListPicker'\nimport BookService from '../services/BookService'\nimport Rating from 'react-rating'\nimport { useHistory, useLocation } from 'react-router-dom'\n\n\nconst SearchBookContainer =()=> {\n\n  const history=useHistory()\n  const location=useLocation()\n\n  const [isbn, setIsbn]=useState('')\n  const [bookByIsbn, setBookByIsbn]=useState(location.state? location.state.book: undefined)\n  const [readLists, setReadLists] = useState([])\n\n  \n  const primary=!!location.state\n\n  useEffect(() => {\n    BookService.getReadLists()\n    .then(data => setReadLists(data))\n  },[])\n\n  const resultOnSearchPage= (data) => {\n    if(!primary) {\n      history.push({\n        pathname: '/etsi',\n        state: { book: data }\n      })\n    } else {\n      setBookByIsbn(data)\n    }\n  }\n\n  const submitForm = (event) => {\n    event.preventDefault()\n    BookService.getBookByIsbn(isbn)\n    .then(data => {\n        resultOnSearchPage(data)     \n    })\n  }\n\n  const addBookToList = (listId) => {\n    const book = {\n      title: bookByIsbn.title,\n      isbn: bookByIsbn.isbn,\n      image_url: bookByIsbn.image_url,\n      description: bookByIsbn.description,\n      authors: bookByIsbn.authors,\n      readlist_id:listId\n    }\n    BookService.addBookToList(book)\n    .then(response => {\n      const newBookByIsbn={...bookByIsbn, readlist_id:listId}\n      setBookByIsbn(newBookByIsbn)\n    })\n\n  }\n\n  const handleChange=(e)=>{\n    const book = {\n      title: bookByIsbn.title,\n      isbn: bookByIsbn.isbn,\n      image_url: bookByIsbn.image_url,\n      description: bookByIsbn.description,\n      authors: bookByIsbn.authors,\n      rated: e\n    }\n    BookService.postRating(book)\n    .then(response => console.log(response))\n  }\n\n  const searchResult = ()=> {\n    if(bookByIsbn) {\n      return (\n        <>\n          {bookByIsbn.title? (\n            <div className='book-card-container'>\n              <Book book={bookByIsbn} />\n              <div id='rating-part'>\n                <Rating\n                stop={10}\n                fractions={2}\n                onChange={handleChange}\n                />\n              </div>\n            <ListPicker readLists={readLists} selected={bookByIsbn.readlist_id} addBookToList={addBookToList} />\n            </div>)\n            : <p>No results found</p>\n          }\n      </>\n    )}\n  }\n\n\nreturn(\n  <div>\n    <h1 className='listTitle'>Find books</h1>\n    <form onSubmit={submitForm}>\n      <input id='search-input' className = 'input' value={isbn} onChange={(e)=>setIsbn(e.target.value)} />\n      <button id='search-btn' className = 'button' type='submit'>search</button>\n    </form>\n    {console.log('bookbyisbn', bookByIsbn)}\n    {searchResult()}\n  </div>\n)}\n\nexport default SearchBookContainer;","import React from 'react'\nimport { Link } from 'react-router-dom'\nconst Locations=require('../helpers/location.json')\n\nconst Breadcrumbs = ({site}) => {\n    let links=[]\n    let location=Locations.find(l=>l.name===site)\n    \n    while(location) {\n        const par=location.parent\n        location=Locations.find(l=>l.name===par)\n        if(location) links.push(location)\n    }\n\n    const createLinks=()=> {\n        return links.reverse().map(l => {\n            return <Link className='breadcrumb-link' to={l.location}>{`${l.name} >>`}</Link>\n        })\n    }\n\n    return(\n        <div>\n            {createLinks()} {site}\n        </div>\n    )\n}\n\nexport default Breadcrumbs","import React from 'react'\nimport Breadcrumbs from '../components/Breadcrumbs'\nimport SearchBookContainer from './SearchBookContainer'\n\nconst SearchBookPageContainer = () => {\n    return (\n        <div className='page-container'>\n            <Breadcrumbs site='search' />\n            <SearchBookContainer />\n        </div>\n    )\n}\n\nexport default SearchBookPageContainer","import React from 'react'\n\nconst AddReadListForm = ({listInput, setListInput, submitForm}) =>(\n    <form onSubmit={submitForm}>\n        <input id='add-list-input' value={listInput} onChange={(e) => setListInput(e.target.value)} />\n        <button id='add-list-btn' type='submit'>Add list</button>\n    </form>\n)\n\nexport default AddReadListForm","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nconst ReadList = ({list}) => (\n    <div className='readlist-link-box'>\n        <Link id='link-to-readlist' className='readlist-link'to={`/list/${list.id}`} >{list.name}</Link>\n    </div>\n)\n\nexport default ReadList","import React, {useState, useEffect} from 'react'\nimport AddReadListForm from '../components/AddReadListForm'\nimport ReadList from '../components/ReadList'\nimport Breadcrumbs from '../components/Breadcrumbs'\nimport BookService from '../services/BookService'\n\nconst ListViewContainer = () => {\n    const [readLists, setReadLists] = useState([])\n    const [listInput, setListInput] = useState('')\n    const [inputVisible, setInputVisible] = useState(false)\n\n    useEffect(() => {\n       BookService.getReadLists()\n        .then(data => setReadLists(data))\n    }, [])\n\n    const toggleVisibility = () => setInputVisible(!inputVisible)\n\n    const submitForm = (event) => {\n        event.preventDefault()\n        const newList = {\n            name: listInput\n        }\n        BookService.postNewList(newList)\n        .then(data => {\n            setReadLists(readLists.concat(data))\n            setListInput('')\n        })\n        .catch(e => console.log(e))\n    } \n\n    return(\n        <>\n        <h1 className='listTitle'>Booklists</h1>\n        <div className='frontpage-app'>\n            {readLists.map(list=>{\n                return<ReadList key={list.id} list={list} />\n            })}\n            <button id='add-list-form-btn' className='readlist-add-button' onClick={toggleVisibility}>Add a list</button>\n            {inputVisible && <AddReadListForm\n                listInput={listInput}\n                setListInput={setListInput}\n                submitForm={submitForm}\n            />}\n        </div>\n        </>\n\n    )\n}\n\nexport default ListViewContainer\n","import React from 'react'\nimport Breadcrumbs from '../components/Breadcrumbs'\nimport ListviewContainer from './ListViewContainer'\n\nconst ListviewPageContainer = () => {\n    return (\n        <>\n            <Breadcrumbs site='readlists' />\n            <ListviewContainer />\n        </>\n    )}\n\nexport default ListviewPageContainer","import React from 'react'\n\nconst ReadListItem = ({item}) => (\n    <div className=\"booklist-item-container\" >\n        <h2 className=\"title\">{item.title}</h2>\n        <h3 className=\"author\">{item.authors[0]}</h3>\n        <p>{item.description}</p>\n    </div>\n)\n\nexport default ReadListItem","import React, {useState, useEffect} from 'react'\nimport {useParams, Link} from 'react-router-dom'\nimport ReadListItem from '../components/ReadListItem'\nimport BookService from '../services/BookService'\nimport Breadcrumbs from '../components/Breadcrumbs'\n\nconst ReadListContainer = () => {\n    const [readList, setReadList] = useState([])\n    const [readLists, setReadLists] =useState([])\n    const id=useParams().id\n    const nrId=Number(id)\n\n    useEffect(() => {\n        BookService.getReadLists()\n        .then(data => {\n            setReadLists(data)\n        })\n    }, [id])\n\n    useEffect(() => {\n        BookService.getReadList(id)\n        .then(data => {\n            setReadList(data)\n        })\n    }, [id])\n\n    const listName=readLists.find(l=> l.id===nrId)\n\n    return (\n        <>\n            <Breadcrumbs site='list details' />\n            {listName && <h1 className='listTitle'>{listName.name}</h1>}\n            {readList.map(book => {\n                return(<Link className='readlist-link-box' key={book.id} to={{pathname: `/book/details`, state:{book}}}><ReadListItem key={book.id} item={book} /></Link>)\n            })}\n        </>\n    )\n}\n\nexport default ReadListContainer","import React, {useState} from 'react'\n\nconst Library = ({library, book}) => {\n\n    const [visible, setVisible] = useState(false)\n\n    const checkLibrary=()=>{\n        return library.includes(book.title.toUpperCase())? <p className='in-library'>In library</p>:<p className='not-in-library'>Not in library</p>\n    }\n\n    const booksFromAuthor=()=> {\n        return library.map(libraryBook=>{\n            return <p key={libraryBook}>{libraryBook}</p>\n        })\n    }\n\n    const buttonText=visible? 'Hide books':'Show library books from author'\n\n    return (\n        <>\n            {checkLibrary()}\n            <button onClick={()=>setVisible(!visible)}>{buttonText}</button>\n            {visible && booksFromAuthor()}\n        </>)\n}\n\nexport default Library","import React, {useState, useEffect} from 'react'\nimport Rating from 'react-rating'\nimport {useHistory} from 'react-router-dom'\nimport Book from '../components/Book'\nimport BookService from '../services/BookService'\nimport ListPicker from '../components/ListPicker'\nimport Library from '../components/Library'\n\nconst BookDetailsContainer = (props) => {\n    const [book, setBook] = useState(props.location.state.book)\n    const [readLists, setReadLists] = useState([])\n    const [library, setLibrary] = useState([])\n    const history=useHistory()\n\n    useEffect(() => {\n        BookService.getReadLists()\n        .then(data => setReadLists(data))\n    },[])\n\n    useEffect(()=> {\n        const author=book.authors[0]\n        const authorString=author.split(' ').join('+')\n        fetch(`/library?author=${authorString}`)\n        .then(response=> response.json())\n        .then(result=> {\n            const books=Array.from(new Set(result))\n            setLibrary(books)\n        })\n    }, [book])\n\n    const handleChange=(e)=>{\n        console.log(e)\n        const ratedBook = {...book, rated:e}\n        BookService.postRating(ratedBook)\n        .then(response => console.log(response))\n    }\n\n    const addBookToList = (listId) => {\n        const bookOnList={...book, readlist_id: listId}\n        BookService.addBookToList(bookOnList)\n        .then(response => {\n            setBook(bookOnList)\n        })\n    }\n\n    const label='<'\n\n    const handleBack=(e)=> {\n        e.preventDefault()\n        history.goBack()\n    }\n\n\n\n    return (\n        <>\n            <button className='button' onClick={handleBack}>{label}</button>\n            {readLists.length>0 && (\n                <div className='book-card-container'>\n                    <Book book={book} />\n                    <div id='rating-part'> \n                        <Rating\n                            stop={10}\n                            fractions={2}\n                            initialRating={book.rated}\n                            onChange={handleChange} \n                        />\n                    </div>\n                    <ListPicker readLists={readLists} selected={book.readlist_id} addBookToList={addBookToList} />\n                    <Library library={library} book={book} />\n                </div>\n            )}\n        </>\n    )\n}\n\n\nexport default BookDetailsContainer","import React, { useEffect, useState } from 'react'\nimport {Link} from 'react-router-dom'\nimport ReadListItem from '../components/ReadListItem'\nimport Rating from 'react-rating'\nimport BookService from '../services/BookService'\n\nconst SampleBooksContainer = () => {\n    const [books, setBooks] = useState([])\n    const [done, setDone] = useState(false)\n\n    useEffect(()=> {\n        BookService.getRatingSample()\n        .then(data => setBooks(data))\n    },[])\n\n    const handleChange= (book, e) =>{\n        const data= {...book, rated: e}\n        BookService.postRating(data)\n        .then(result => {\n            setBooks(books.map(book=> book.readgeekid === data.readgeekid? data : book))\n            if(!done) {\n                setDone(true)\n                BookService.setRatingDone()\n            }\n        })\n    }\n\n    const bookList = () => {\n        if(books.length>0) {\n            return books.map(book => {\n                return (<div id='rate-book' key={book.title}>\n                            <ReadListItem item={book} />\n                            <Rating \n                                stop={10} \n                                fractions={2}\n                                initialRating={book.rated}\n                                onChange={(e)=>handleChange(book, e)} \n                            /> \n                        </div>)\n            })\n        }\n        return <></>\n    }    \n    return (\n    <>\n        <h1 className='listTitle'>Rate books</h1>\n        <p>Recommendations are based on the books you've rated</p>\n        {bookList()}\n        <Link to='/'>\n            <button \n                id='sample-ready-button'\n                className='form-button'\n                disabled={!done}\n            >\n            Ready!\n            </button>\n        </Link>\n    </>)\n}\n\nexport default SampleBooksContainer","import React from 'react'\n\nconst FilterBooks = ({genres, genre, setGenre}) => {\n\n    const setFilter=(selectedGenre)=> {\n        return ()=> {\n            selectedGenre===genre? setGenre(null): setGenre(selectedGenre)\n        }\n    }\n\n    return genres.map(g => {\n        return <button key={g} className={g===genre? 'btn-listpicker-selected':'btn-listpicker'}  onClick={setFilter(g)}>{g}</button>\n    })\n}\n\nexport default FilterBooks","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport ReadListItem from '../components/ReadListItem'\nimport FilterBooks from '../components/FilterBooks'\nimport BookService from '../services/BookService'\n\nconst RecommendContainer = () => {\n\n    const [recommendations, setRecommendations] = useState([])\n    const [genre, setGenre] =useState(null)\n\n    const genres=Array.from(new Set(recommendations.map(r=>r.genre)))\n\n    const filteredRecommendations=genre? \n    recommendations.filter(r=> r.genre===genre)\n    :recommendations\n\n    useEffect(() => {\n        BookService.getRecommendations()\n        .then(data => setRecommendations(data))\n    }, [])\n\n\n    const listRecommendations = () => {\n        return filteredRecommendations.map(book => {\n            return <Link className='readlist-link-box' key={book.isbn} to={{pathname: `/book/details`, state:{book}}}><ReadListItem item={book} /></Link>\n        }) \n    }\n\n    return(\n        <>\n            <Link to='/recommendations'><h1 className='listTitle'>Recommendations</h1></Link>\n            <FilterBooks genres={genres} genre={genre} setGenre={setGenre} />\n            {console.log('genre', genre)}\n            {listRecommendations()}\n        </>\n    )\n}\n\nexport default RecommendContainer","import React from 'react'\nimport Breadcrumbs from '../components/Breadcrumbs'\nimport RecommendContainer from './RecommendContainer'\n\n\nconst RecommendPageContainer = () => {\n    return (\n        <>\n            <Breadcrumbs site='recommendations' />\n            <RecommendContainer />\n        </>\n    )\n}\n\nexport default RecommendPageContainer","import React from 'react'\n\nconst Input = ({id, label, type, value, onChange}) => {\n    return(\n        <div>\n            <div className='form-label'>\n            {label}\n            </div>\n            <input\n                className='form-input'\n                id={id}\n                type={type}\n                value={value}\n                onChange={onChange}\n            />\n        </div>\n\n    )\n\n}\n\nexport default Input","import React, {useState} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport Input from '../components/Input' \n\nconst RegisterContainer = ({notifyUser}) => {\n    const [email, setEmail] = useState(\"\")\n    const [username, setUsername] =useState(\"\")\n    const [password, setPassword] = useState(\"\")\n\n    const history=useHistory()\n\n    const handleRegister = (event) => {\n        event.preventDefault()\n        const user={\n            email,\n            username,\n            password\n        }\n        let res;\n        fetch('/user/register', {\n            method: 'post',\n            headers:{\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(user)\n        })\n        .then(response => {\n            res=response\n            return response.json()\n        })\n        .then(result => {\n            console.log('result', result)\n            if(res.ok) {\n                notifyUser({style: 'notification-success',text:'user created'})\n                history.push('/login')\n            } else {\n                notifyUser({style: 'notification-error', text: result})\n            }\n\n        })\n    }\n\n    return(\n        <div className='form-container'>\n            <form onSubmit={handleRegister} >\n                <Input id='register-email' label='e-mail' type='text' value={email} onChange={(e) => setEmail(e.target.value)}/>\n                <Input id='register-username' label='username' type='text' value={username} onChange={(e) => setUsername(e.target.value)} />\n                <Input id='register-password' label='password' type='password' value={password} onChange={(e) => setPassword(e.target.value)} />\n                <button id='register-button' className='form-button' type='submit'>register</button>\n            </form>\n        </div>\n    )\n}\n\nexport default RegisterContainer","import React, {useState} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport BookService from '../services/BookService'\nimport Input from '../components/Input'\nimport { Link } from 'react-router-dom'\n\nconst LoginContainer = ({setUser, notifyUser}) => {\n    const [username, setUsername]=useState(\"\")\n    const [password, setPassword]=useState(\"\")\n    const history=useHistory()\n\n    const handleLogin=(event)=>{\n        event.preventDefault()\n        const user={\n            username,\n            password\n        }\n        fetch('/user/login', {\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(user)\n        })\n        .then(response=> {\n            if(!response.ok) {\n                throw response\n            }\n            return response.json()\n        })\n        .then(data => {\n            setUser(data)\n            BookService.setToken(data.token)\n            window.localStorage.setItem('loggedUser', JSON.stringify(data))\n            const path=data.taste_tested? '/':'/rate'\n            history.push(path)\n        })\n        .catch(error => {\n            if(error.status===401) {\n                notifyUser({style: 'notification-error', text:'login failed'})\n                setUsername('')\n                setPassword('')\n            } else {\n                notifyUser({style: 'notification-error', text:'system error'})\n            }\n        })\n    }\n\n    return(\n        <div className='form-container'>\n            <form className='form-element' onSubmit={handleLogin} >\n                <Input id='login-username' label='username' type='text' value={username} onChange={(e)=>setUsername(e.target.value)} />\n                <Input id='login-password' label='password' type='password' value={password} onChange={(e)=> setPassword(e.target.value)}/>\n                <button id='login-button' className='form-button' type='submit'>kirjaudu</button>\n            </form>\n            <Link id='link-to-register' to='/register'>register</Link>\n        </div>\n    )\n}\n\nexport default LoginContainer","import React from 'react'\nimport {Route, Redirect} from 'react-router-dom'\n\nconst PrivateRoute= ({component: Component, path, isAuth, ...rest}) => (\n    <Route path={path} >\n        {isAuth?\n            <Component {...rest}/>:   \n            <Redirect to='/login' />}\n    </Route>\n)\n\nexport default PrivateRoute","import React from 'react'\n\n\nconst Notification = ({message}) => {\n    return (\n    <div className='notification-container'>\n        {message && <p className={message.style}>{message.text}</p>}\n    </div>\n    )\n}\n\nexport default Notification","import React, {useState, useEffect} from 'react';\nimport SearchBookContainer from './containers/SearchBookContainer'\nimport SearchBookPageContainer from './containers/SearchBookPageContainer'\nimport ListViewContainer from './containers/ListViewContainer'\nimport ListViewPageContainer from './containers/ListviewPageContainer'\nimport ReadListContainer from './containers/ReadListContainer'\nimport BookDetailsContainer from './containers/BookDetailsContainer'\nimport SampleBooksContainer from './containers/SampleBooksContainer'\nimport RecommendContainer from './containers/RecommendContainer'\nimport RecommendPageContainer from './containers/RecommendPageContainer' \nimport RegisterContainer from './containers/RegisterContainer'\nimport LoginContainer from './containers/LoginContainer'\nimport PrivateRoute from './components/PrivateRoute'\nimport Notification from './components/Notification'\nimport './form.css'\nimport BookService from './services/BookService'\nimport {\n  BrowserRouter as Router,\n  Switch, Route, Link, Redirect\n} from \"react-router-dom\"\n\nconst App =()=> {\n  const [user, setUser]=useState(null)\n  const [message, setMessage]=useState(null)\n\n  const setNotification = (notification) => {\n    setMessage(notification)\n    setTimeout(()=> {\n      setMessage(null)\n    }, 5000)\n  }\n\n  useEffect(() => {\n    const loggedUser=window.localStorage.getItem('loggedUser')\n    if(loggedUser) {\n      const user=JSON.parse(loggedUser)\n      setUser(user)\n      BookService.setToken(user.token)\n    }\n  }, [])\n\n  const logoutClick = () => {\n    window.localStorage.removeItem('loggedUser')\n    setUser(null)\n    BookService.setToken(null)\n  }\n\nreturn(\n  <div className='page-container'>\n    {user && \n    <p className='loggedin-user'>{`${user.username} logged in`}<button className='button' onClick={logoutClick}>logout</button></p>}\n  <Notification message={message} />\n  <Router>\n    <Switch>\n      <PrivateRoute component={ReadListContainer} path=\"/list/:id\" isAuth={!!user} />\n      <PrivateRoute component={ListViewPageContainer} path='/list' isAuth={!!user} />\n      <PrivateRoute component={SearchBookPageContainer} path=\"/etsi\" isAuth={!!user} />\n      <PrivateRoute component={BookDetailsContainer} path ='/book/details' isAuth={!!user} />\n      <PrivateRoute component={SampleBooksContainer} path= '/rate' isAuth={!!user} />\n      <PrivateRoute component={RecommendPageContainer} path='/recommendations' isAuth={!!user} />\n      <Route path='/register'>\n        <RegisterContainer notifyUser={setNotification} />\n      </Route>\n      <Route path=\"/\">\n        {user ? \n          (<>\n            <SearchBookContainer />\n            <ListViewContainer  />\n            <RecommendContainer />\n          </>\n          ): \n          <LoginContainer setUser={setUser} notifyUser={setNotification} />\n        }\n      </Route>\n    </Switch>\n  </Router>\n  </div>\n)}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\nimport '@fortawesome/fontawesome-free/css/all.min.css'\n\nconst books=[{\n  isbn: \"0060512148\",\n  isbn13: \"9780060512149\",\n  title: \"Angels\",\n  authors: [\"Marian Keyes\"],\n  image: \"https://i.gr-assets.com/images/S/compressed.photo.goodreads.com/books/1407711412l/82747._SX98_.jpg\",\n  description: \"Maggie has always been the white sheep of the Walsh family.Unlike her comically dysfunctional sisters,Rachel(heroine of Rachel's Holiday) and Claire (heroine of Watermelon), she married a decent man who adored her and found herself a solid career. Where Rachel was reckless and Claire dramatic, Maggie settled early for safety. Or so she believed until she discovers that her husband is having an affair and her boss is going to fire her. Suddenly, her perfectly organized life has become a perfect mess.\"\n},\n{\n  isbn: \"0440241901\",\n  isbn13: \"9780440241904\",\n  title: \"Can You Keep a Secret?\",\n  authors: [\"Sophie Kinsella\"],\n  image: \"https://i.gr-assets.com/images/S/compressed.photo.goodreads.com/books/1330464293l/33724._SY160_.jpg\",\n  description: \"Meet Emma Corrigan, a young woman with a huge heart, an irrepressible spirit, and a few little secrets: Secrets from her boyfriend: I've always thought Connor looks a bit like Ken. As in Barbie and Ken. Secrets from her mother: I lost my virginity in the spare bedroom with Danny Nussbaum while Mum and Dad were downstairs watching Ben-Hur\"\n}\n]\n\nReactDOM.render(\n  <React.StrictMode>\n    <App books={books} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}