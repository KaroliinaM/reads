{"version":3,"sources":["services/BookService.js","services/LibraryService.js","components/Book.js","components/ListPicker.js","components/Library.js","components/BookDetails.js","containers/SearchBookContainer.js","components/Breadcrumbs.js","containers/SearchBookPageContainer.js","components/AddReadListForm.js","components/ReadList.js","containers/ListViewContainer.js","containers/ListviewPageContainer.js","components/ReadListItem.js","containers/ReadListContainer.js","containers/BookDetailsContainer.js","containers/SampleBooksContainer.js","components/FilterBooks.js","containers/RecommendContainer.js","containers/RecommendPageContainer.js","components/Input.js","services/UserService.js","helpers/helpers.js","containers/RegisterContainer.js","containers/LoginContainer.js","components/PrivateRoute.js","components/Notification.js","components/Footer.js","App.js","index.js"],"names":["token","fetch","method","headers","Authorization","then","response","json","newList","body","JSON","stringify","id","isbn","book","data","newToken","author","authorString","split","join","Book","className","src","image_url","alt","title","authors","description","ListPicker","readLists","selected","addBookToList","map","list","key","onClick","name","Library","library","useState","visible","setVisible","buttonText","includes","toUpperCase","libraryBook","BookDetails","setBook","length","stop","fractions","initialRating","rated","onChange","e","ratedBook","BookService","readlist_id","listId","bookOnList","result","SearchBookContainer","history","useHistory","location","useLocation","setIsbn","state","undefined","bookByIsbn","setBookByIsbn","setReadLists","setLibrary","primary","useEffect","isMounted","LibraryService","books","Array","from","Set","onSubmit","event","preventDefault","push","pathname","resultOnSearchPage","placeholder","value","target","type","searchResult","Locations","require","Breadcrumbs","site","links","find","l","par","parent","reverse","to","SearchBookPageContainer","AddReadListForm","listInput","setListInput","submitForm","disabled","ReadList","ListViewContainer","inputVisible","setInputVisible","concat","catch","console","log","ListviewPageContainer","ReadListItem","item","ReadListContainer","readList","setReadList","useParams","nrId","Number","listName","BookDetailsContainer","props","goBack","SampleBooksContainer","setBooks","done","setDone","readgeekid","handleChange","FilterBooks","genres","genre","setGenre","g","selectedGenre","RecommendContainer","recommendations","setRecommendations","r","filteredRecommendations","filter","RecommendPageContainer","Input","label","user","ok","handleError","notifyUser","error","style","text","RegisterContainer","email","setEmail","username","setUsername","password","setPassword","UserService","LoginContainer","setUser","window","localStorage","setItem","path","taste_tested","PrivateRoute","Component","component","isAuth","rest","Notification","message","Footer","href","App","setMessage","setNotification","notification","setTimeout","loggedUser","getItem","parse","removeItem","ListViewPageContainer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6556a3e2.chunk.js","sourcesContent":["let token = null\n\nconst setToken = (newToken) => {\n  token = `Bearer ${newToken}`\n}\n\nconst getReadLists = () => {\n  return fetch('/readlists', {\n    method: 'get',\n    headers: {\n      Authorization: token\n    }\n  })\n    .then(response => response.json())\n}\n\nconst postNewList = (newList) => {\n  return fetch('/readlists', {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: token\n    },\n    body: JSON.stringify(newList)\n  })\n    .then(response => response.json())\n}\n\nconst getReadList = (id) => {\n  return fetch(`/readlists/${id}`, {\n    method: 'get',\n    headers: {\n      Authorization: token\n    }\n  })\n    .then(response => response.json())\n}\n\nconst addBookToList = (book) => {\n  return fetch('/books', {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: token\n    },\n    body: JSON.stringify(book)\n  })\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n}\n\nconst getBookByIsbn = (isbn) => {\n  return fetch(`/book/${isbn}`)\n    .then(response => response.json())\n}\n\nconst getBookDetails = (id) => {\n  return fetch(`/books/${id}`, {\n    method: 'get',\n    headers: {\n      Authorization: token\n    }\n  })\n    .then(response => response.json())\n    .then(data => {\n      return data\n    })\n}\n\nconst postRating = (data) => {\n  return fetch('/recommendations/rate', {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: token\n    },\n    body: JSON.stringify(data)\n  })\n    .then(response => response.json())\n}\n\nconst getRatingSample = () => {\n  return fetch('/recommendations/sample', {\n    method: 'get',\n    headers: {\n      Authorization: token\n    }\n  })\n    .then(response => response.json())\n}\n\nconst getRecommendations = () => {\n  return fetch('/recommendations/list', {\n    method: 'get',\n    headers: {\n      Authorization: token\n    }\n  })\n    .then(response => response.json())\n}\n\nconst setRatingDone = () => {\n  return fetch('/recommendations/rated', {\n    method: 'put',\n    headers: {\n      Authorization: token\n    }\n  })\n}\n\nexport default {\n  getReadLists: getReadLists,\n  postNewList: postNewList,\n  getReadList: getReadList,\n  getBookByIsbn: getBookByIsbn,\n  addBookToList: addBookToList,\n  getBookDetails: getBookDetails,\n  postRating: postRating,\n  getRatingSample: getRatingSample,\n  getRecommendations: getRecommendations,\n  setRatingDone: setRatingDone,\n  setToken,\n  token\n}\n","const getBooks = (author) => {\n  const authorString = author.split(' ').join('+')\n  return fetch(`/library?author=${authorString}`)\n    .then(response => response.json())\n}\n\nexport default {\n  getBooks\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Book = ({ book }) => {\n  return (\n    <div className='book-container'>\n      <img src={book.image_url} alt=\"cover\" />\n      <div className='book-info-container'>\n        <h1 className='title'>{book.title}</h1>\n        <h2 className='author'>{book.authors[0]}</h2>\n        <p>{book.description}</p>\n      </div>\n    </div>\n  )\n}\n\nBook.propTypes = {\n  book: PropTypes.object.isRequired\n}\n\nexport default Book\n","import React from 'react'\n\nconst ListPicker = ({ readLists, selected, addBookToList }) => {\n  const style = (id) => selected === id ? 'btn-listpicker-selected' : 'btn-listpicker'\n  return readLists.map(list => {\n    return <button className={style(list.id)} key={list.id} onClick={() => addBookToList(list.id)} >{list.name}</button>\n  })\n}\n\nexport default ListPicker\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Library = ({ library, book }) => {\n\n  const [visible, setVisible] = useState(false)\n\n  const checkLibrary = () => {\n    return library.includes(book.title.toUpperCase()) ? <p className='in-library'>In library</p> : <p className='not-in-library'>Not in library</p>\n  }\n\n  const booksFromAuthor = () => {\n    return library.map(libraryBook => {\n      return <p key={libraryBook}>{libraryBook}</p>\n    })\n  }\n\n  const buttonText = visible ? 'Hide books' : 'Show library books from author'\n\n  return (\n    <>\n      {checkLibrary()}\n      <button onClick={() => setVisible(!visible)}>{buttonText}</button>\n      {visible && booksFromAuthor()}\n    </>)\n}\n\nLibrary.propTypes = {\n  library: PropTypes.array.isRequired,\n  book: PropTypes.object.isRequired\n}\n\nexport default Library\n","import React from 'react'\nimport Book from '../components/Book'\nimport ListPicker from '../components/ListPicker'\nimport Library from '../components/Library'\nimport BookService from '../services/BookService'\nimport Rating from 'react-rating'\nimport PropTypes from 'prop-types'\n\nconst BookDetails = ({ book, setBook, readLists, library }) => {\n  const handleChange = (e) => {\n    const ratedBook = { ...book, rated: e }\n    BookService.postRating(ratedBook)\n      .then(response => {\n        setBook(response)\n      })\n  }\n\n  const addBookToList = (listId) => {\n    const bookOnList = { ...book, readlist_id: listId }\n    BookService.addBookToList(bookOnList)\n      .then(response => {\n        setBook(response.result)\n      })\n  }\n\n  return (\n    <>\n      {readLists.length > 0 && (\n        <div className='book-card-container'>\n          <Book book={book} />\n          <div id='rating-part'>\n            <Rating\n              stop={10}\n              fractions={2}\n              initialRating={book.rated}\n              onChange={handleChange}\n            />\n          </div>\n          <ListPicker readLists={readLists} selected={book.readlist_id} addBookToList={addBookToList} />\n          <Library library={library} book={book} />\n        </div>\n      )}\n    </>\n  )\n}\n\nBookDetails.propTypes = {\n  book: PropTypes.object.isRequired,\n  setBook: PropTypes.func,\n  readLists: PropTypes.array.isRequired,\n  library: PropTypes.array.isRequired\n}\n\nexport default BookDetails\n","import React, { useState, useEffect } from 'react';\nimport BookService from '../services/BookService'\nimport LibraryService from '../services/LibraryService'\nimport BookDetails from '../components/BookDetails'\nimport { useHistory, useLocation } from 'react-router-dom'\n\nconst SearchBookContainer = () => {\n  const history = useHistory()\n  const location = useLocation()\n\n  const [isbn, setIsbn] = useState('')\n  const [bookByIsbn, setBookByIsbn] = useState(location.state ? location.state.book : undefined)\n  const [readLists, setReadLists] = useState([])\n  const [library, setLibrary] = useState([])\n\n  const primary = !!location.state\n\n  useEffect(() => {\n    let isMounted = true\n    BookService.getReadLists()\n      .then(data => {\n        if (isMounted)setReadLists(data)\n      })\n    return () => { isMounted = false }\n  }, [])\n\n  useEffect(() => {\n    if (bookByIsbn) {\n      const author = bookByIsbn.authors[0]\n      LibraryService.getBooks(author)\n        .then(result => {\n          const books = Array.from(new Set(result))\n          setLibrary(books)\n        })\n    }\n  }, [bookByIsbn])\n\n  const resultOnSearchPage = (data) => {\n    if (!primary) {\n      history.push({\n        pathname: '/etsi',\n        state: { book: data }\n      })\n    } else {\n      setBookByIsbn(data)\n    }\n  }\n\n  const submitForm = (event) => {\n    event.preventDefault()\n    BookService.getBookByIsbn(isbn)\n      .then(data => {\n        resultOnSearchPage(data)\n      })\n  }\n\n  const searchResult = () => {\n    if (bookByIsbn) {\n      return (\n        <>\n          {bookByIsbn.title\n            ? <BookDetails book={bookByIsbn} setBook={setBookByIsbn} readLists={readLists} library={library} />\n            : <p>No results found</p>\n          }\n        </>\n      )\n    }\n  }\n\n  return (\n    <div>\n      <h1 className='listTitle'>Find books</h1>\n      <form onSubmit={submitForm}>\n        <input id='search-input' className = 'input' placeholder='search books by isbn' value={isbn} onChange={(e) => setIsbn(e.target.value)} />\n        <button id='search-btn' className = 'button' type='submit'>search</button>\n      </form>\n      {searchResult()}\n    </div>\n  )\n}\n\nexport default SearchBookContainer\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nconst Locations = require('../helpers/location.json')\n\nconst Breadcrumbs = ({ site }) => {\n  const links = []\n  let location = Locations.find(l => l.name === site)\n\n  while (location) {\n    const par = location.parent\n    location = Locations.find(l => l.name === par)\n    if (location) links.push(location)\n  }\n\n  const createLinks = () => {\n    return links.reverse().map(l => {\n      return <Link key={l.name} className='breadcrumb-link' to={l.location}>{`${l.name} >>`}</Link>\n    })\n  }\n\n  return (\n    <div>\n      {createLinks()} {site}\n    </div>\n  )\n}\n\nBreadcrumbs.propTypes = {\n  site: PropTypes.string.isRequired\n}\n\nexport default Breadcrumbs\n","import React from 'react'\nimport Breadcrumbs from '../components/Breadcrumbs'\nimport SearchBookContainer from './SearchBookContainer'\n\nconst SearchBookPageContainer = () => {\n  return (\n    <div className='page-container'>\n      <Breadcrumbs site='search' />\n      <SearchBookContainer />\n    </div>\n  )\n}\n\nexport default SearchBookPageContainer\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst AddReadListForm = ({ listInput, setListInput, submitForm }) => (\n  <form onSubmit={submitForm}>\n    <input id='add-list-input' value={listInput} onChange={(e) => setListInput(e.target.value)} />\n    <button id='add-list-btn' disabled={listInput.length === 0} type='submit'>Add list</button>\n  </form>\n)\n\nAddReadListForm.propTypes = {\n  listInput: PropTypes.string.isRequired,\n  setListInput: PropTypes.func.isRequired,\n  submitForm: PropTypes.func.isRequired\n}\n\nexport default AddReadListForm\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nconst ReadList = ({ list }) => (\n  <div className='readlist-link-box'>\n    <Link id='link-to-readlist' className='readlist-link'to={`/list/${list.id}`} >{list.name}</Link>\n  </div>\n)\n\nReadList.propTypes = {\n  list: PropTypes.object.isRequired\n}\n\nexport default ReadList\n","import React, { useState, useEffect } from 'react'\nimport AddReadListForm from '../components/AddReadListForm'\nimport ReadList from '../components/ReadList'\nimport BookService from '../services/BookService'\n\nconst ListViewContainer = () => {\n  const [readLists, setReadLists] = useState([])\n  const [listInput, setListInput] = useState('')\n  const [inputVisible, setInputVisible] = useState(false)\n\n  useEffect(() => {\n    let isMounted = true\n    BookService.getReadLists()\n      .then(data => {\n        if (isMounted)setReadLists(data)\n      })\n    return () => { isMounted = false }\n  }, [])\n\n  const toggleVisibility = () => setInputVisible(!inputVisible)\n\n  const submitForm = (event) => {\n    event.preventDefault()\n    const newList = {\n      name: listInput\n    }\n    BookService.postNewList(newList)\n      .then(data => {\n        setReadLists(readLists.concat(data))\n        setListInput('')\n      })\n      .catch(e => console.log(e))\n  } \n\n  return (\n    <>\n      <h1 className='listTitle'>Booklists</h1>\n      <div className='frontpage-app'>\n        {readLists.map(list => {\n          return <ReadList key={list.id} list={list} />\n        })}\n        <button id='add-list-form-btn' className='readlist-add-button' onClick={toggleVisibility}>Add a list</button>\n        {inputVisible && <AddReadListForm\n          listInput={listInput}\n          setListInput={setListInput}\n          submitForm={submitForm}\n        />}\n      </div>\n    </>\n\n  )\n}\n\nexport default ListViewContainer\n","import React from 'react'\nimport Breadcrumbs from '../components/Breadcrumbs'\nimport ListviewContainer from './ListViewContainer'\n\nconst ListviewPageContainer = () => {\n  return (\n    <>\n      <Breadcrumbs site='readlists' />\n      <ListviewContainer />\n    </>\n  )\n}\n\nexport default ListviewPageContainer\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst ReadListItem = ({ item }) => (\n  <div className=\"booklist-item-container\" >\n    <h2 className=\"title\">{item.title}</h2>\n    <h3 className=\"author\">{item.authors[0]}</h3>\n    <p>{item.description}</p>\n  </div>\n)\n\nReadListItem.propTypes = {\n  item: PropTypes.object.isRequired\n}\n\nexport default ReadListItem\n","import React, { useState, useEffect } from 'react'\nimport { useParams, Link } from 'react-router-dom'\nimport ReadListItem from '../components/ReadListItem'\nimport BookService from '../services/BookService'\nimport Breadcrumbs from '../components/Breadcrumbs'\n\nconst ReadListContainer = () => {\n  const [readList, setReadList] = useState([])\n  const [readLists, setReadLists] = useState([])\n  const id = useParams().id\n  const nrId = Number(id)\n\n  useEffect(() => {\n    BookService.getReadLists()\n      .then(data => {\n        setReadLists(data)\n      })\n  }, [id])\n\n  useEffect(() => {\n    BookService.getReadList(id)\n      .then(data => {\n        setReadList(data)\n      })\n  }, [id])\n\n  const listName = readLists.find(l=> l.id === nrId)\n\n  return (\n    <>\n      <Breadcrumbs site='list details' />\n      {listName && <h1 className='listTitle'>{listName.name}</h1>}\n      {readList.map(book => {\n        return (<Link className='readlist-link-box' key={book.id} to={{ pathname: '/book/details', state: { book } }}><ReadListItem key={book.id} item={book} /></Link>)\n      })}\n    </>\n  )\n}\n\nexport default ReadListContainer\n","import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport BookService from '../services/BookService'\nimport BookDetails from '../components/BookDetails'\nimport LibraryService from '../services/LibraryService'\nimport PropTypes from 'prop-types'\n\nconst BookDetailsContainer = (props) => {\n  const [book, setBook] = useState(props.location.state.book)\n  const [readLists, setReadLists] = useState([])\n  const [library, setLibrary] = useState([])\n  const history = useHistory()\n\n  useEffect(() => {\n    BookService.getReadLists()\n      .then(data => setReadLists(data))\n  }, [])\n\n  useEffect(() => {\n    const author = book.authors[0]\n    LibraryService.getBooks(author)\n      .then(result => {\n        const books = Array.from(new Set(result))\n        setLibrary(books)\n      })\n  }, [book])\n\n  const label = '<'\n\n  const handleBack = (e) => {\n    e.preventDefault()\n    history.goBack()\n  }\n\n  return (\n    <>\n      <button className='button' onClick={handleBack}>{label}</button>\n      <BookDetails book={book} setBook={setBook} readLists={readLists} library={library} />\n    </>\n  )\n}\n\nBookDetailsContainer.propTypes = {\n  location: PropTypes.object.isRequired\n}\n\nexport default BookDetailsContainer\n","import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport ReadListItem from '../components/ReadListItem'\nimport Rating from 'react-rating'\nimport BookService from '../services/BookService'\n\nconst SampleBooksContainer = () => {\n  const [books, setBooks] = useState([])\n  const [done, setDone] = useState(false)\n\n  useEffect(() => {\n    BookService.getRatingSample()\n      .then(data => setBooks(data))\n  },[])\n\n  const handleChange = (book, e) => {\n    const data = { ...book, rated: e }\n    BookService.postRating(data)\n      .then(result => {\n        setBooks(books.map(book => book.readgeekid === data.readgeekid ? result : book))\n        if (!done) {\n          setDone(true)\n          BookService.setRatingDone()\n        }\n      })\n  }\n\n  const bookList = () => {\n    if (books.length > 0) {\n      return books.map(book => {\n        return (<div id='rate-book' key={book.title}>\n          <ReadListItem item={book} />\n          <Rating\n            stop={10}\n            fractions={2}\n            initialRating={book.rated}\n            onChange={(e) => handleChange(book, e)}\n          />\n        </div>)\n      })\n    }\n    return <></>\n  }\n  return (\n    <>\n      <h1 className='listTitle'>Rate books</h1>\n      <p>Recommendations are based on the books you've rated</p>\n      {bookList()}\n      <Link to='/'>\n        <button\n          id='sample-ready-button'\n          className='form-button'\n          disabled={!done}\n        >\n            Ready!\n        </button>\n      </Link>\n    </>)\n}\n\nexport default SampleBooksContainer\n","import React from 'react'\n\nconst FilterBooks = ({ genres, genre, setGenre }) => {\n  const setFilter = (selectedGenre) => {\n    return () => {\n      selectedGenre === genre ? setGenre(null) : setGenre(selectedGenre)\n    }\n  }\n\n  return genres.map(g => {\n    return <button key={g} className={g === genre ? 'btn-listpicker-selected' : 'btn-listpicker'} onClick={setFilter(g)}>{g}</button>\n  })\n}\n\nexport default FilterBooks\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport ReadListItem from '../components/ReadListItem'\nimport FilterBooks from '../components/FilterBooks'\nimport BookService from '../services/BookService'\n\nconst RecommendContainer = () => {\n  const [recommendations, setRecommendations] = useState([])\n  const [genre, setGenre] = useState(null)\n\n  const genres = Array.from(new Set(recommendations.map(r => r.genre)))\n\n  const filteredRecommendations = genre\n    ? recommendations.filter(r => r.genre === genre)\n    : recommendations\n\n  useEffect(() => {\n    let isMounted = true\n    BookService.getRecommendations()\n      .then(data => {\n        if (isMounted)setRecommendations(data)\n      })\n    return () => { isMounted = false }\n  }, [])\n\n  const listRecommendations = () => {\n    if (recommendations.length === 0) {\n      return <p>processing, wait for a moment</p>\n    }\n    return filteredRecommendations.map(book => {\n      return <Link className='readlist-link-box' key={book.isbn} to={{ pathname: '/book/details', state: { book } }}><ReadListItem item={book} /></Link>\n    })\n  }\n\n  return (\n    <>\n      <Link to='/recommendations'><h1 className='listTitle'>Recommendations</h1></Link>\n      <FilterBooks genres={genres} genre={genre} setGenre={setGenre} />\n      {listRecommendations()}\n    </>\n  )\n}\n\nexport default RecommendContainer\n","import React from 'react'\nimport Breadcrumbs from '../components/Breadcrumbs'\nimport RecommendContainer from './RecommendContainer'\n\nconst RecommendPageContainer = () => {\n  return (\n    <>\n      <Breadcrumbs site='recommendations' />\n      <RecommendContainer />\n    </>\n  )\n}\n\nexport default RecommendPageContainer\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Input = ({ id, label, type, value, onChange }) => {\n  return (\n    <div>\n      <div className='form-label'>\n        {label}\n      </div>\n      <input\n        className='form-input'\n        id={id}\n        type={type}\n        value={value}\n        onChange={onChange}\n      />\n    </div>\n\n  )\n}\n\nInput.propTypes = {\n  id: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n}\n\nexport default Input\n","const login = (user) => {\n  return fetch('/user/login', {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw response\n      }\n      return response.json()\n    })\n}\n\nconst register = (user) => {\n  return fetch('/user/register', {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw response\n      }\n      return response.json()\n    })\n}\n\nexport default {\n  login,\n  register\n}\n","export const handleError = (notifyUser, error) => {\n  return error.json()\n    .then(data => {\n      notifyUser({ style: 'notification-error', text: data.error })\n    })\n}\n","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport Input from '../components/Input'\nimport UserService from '../services/UserService'\nimport { handleError } from '../helpers/helpers'\nimport PropTypes from 'prop-types'\n\nconst RegisterContainer = ({ notifyUser }) => {\n  const [email, setEmail] = useState('')\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const history = useHistory()\n\n  const handleRegister = (event) => {\n    event.preventDefault()\n    const user = {\n      email,\n      username,\n      password\n    }\n    UserService.register(user)\n      .then(result => {\n        notifyUser({ style: 'notification-success', text: 'user created' })\n        history.push('/login')\n      })\n      .catch(e => {\n        handleError(notifyUser, e)\n      })\n  }\n\n  return (\n    <div className='form-container'>\n      <form onSubmit={handleRegister} >\n        <Input id='register-email' label='e-mail' type='text' value={email} onChange={(e) => setEmail(e.target.value)}/>\n        <Input id='register-username' label='username' type='text' value={username} onChange={(e) => setUsername(e.target.value)} />\n        <Input id='register-password' label='password' type='password' value={password} onChange={(e) => setPassword(e.target.value)} />\n        <button id='register-button' className='form-button' type='submit'>register</button>\n      </form>\n    </div>\n  )\n}\n\nRegisterContainer.propTypes = {\n  notifyUser: PropTypes.func\n}\n\nexport default RegisterContainer\n","import React, { useState } from 'react'\nimport { useHistory, Link } from 'react-router-dom'\nimport BookService from '../services/BookService'\nimport Input from '../components/Input'\nimport UserService from '../services/UserService'\nimport { handleError } from '../helpers/helpers'\nimport PropTypes from 'prop-types'\n\nconst LoginContainer = ({ setUser, notifyUser }) => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const history = useHistory()\n\n  const handleLogin = (event) => {\n    event.preventDefault()\n    const user = {\n      username,\n      password\n    }\n    UserService.login(user)\n      .then(data => {\n        setUser(data)\n        BookService.setToken(data.token)\n        window.localStorage.setItem('loggedUser', JSON.stringify(data))\n        const path = data.taste_tested ? '/' : '/rate'\n        history.push(path)\n      })\n      .catch(error => {\n        handleError(notifyUser, error)\n      })\n  }\n\n  return (\n    <div className='form-container'>\n      <form className='form-element' onSubmit={handleLogin} >\n        <Input id='login-username' label='username' type='text' value={username} onChange={(e) => setUsername(e.target.value)} />\n        <Input id='login-password' label='password' type='password' value={password} onChange={(e) => setPassword(e.target.value)}/>\n        <button id='login-button' className='form-button' type='submit'>kirjaudu</button>\n      </form>\n      <Link id='link-to-register' to='/register'>register</Link>\n    </div>\n  )\n}\n\nLoginContainer.propTypes = {\n  setUser: PropTypes.func.isRequired,\n  notifyUser: PropTypes.func\n}\n\nexport default LoginContainer\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nconst PrivateRoute = ({ component: Component, path, isAuth, ...rest }) => (\n  <Route path={path} >\n    {isAuth\n      ? <Component {...rest}/>\n      : <Redirect to='/login' />}\n  </Route>\n)\n\nPrivateRoute.propTypes = {\n  component: PropTypes.func.isRequired,\n  path: PropTypes.string.isRequired,\n  isAuth: PropTypes.bool.isRequired\n}\n\nexport default PrivateRoute\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Notification = ({ message }) => {\n  return (\n    <div className='notification-container'>\n      {message && <p className={message.style}>{message.text}</p>}\n    </div>\n  )\n}\n\nNotification.propTypes = {\n  message: PropTypes.string\n}\n\nexport default Notification\n","import React from 'react'\n\nconst Footer = () => {\n  return <p className='footer'>Powered by <a href='https://www.readgeek.com/'>Readgeek</a>, <a href='https://openlibrary.org/'>Open Library</a> and <a href='https://www.finna.fi/'>Finna</a></p>\n}\n\nexport default Footer\n","import React, { useState, useEffect } from 'react'\nimport SearchBookContainer from './containers/SearchBookContainer'\nimport SearchBookPageContainer from './containers/SearchBookPageContainer'\nimport ListViewContainer from './containers/ListViewContainer'\nimport ListViewPageContainer from './containers/ListviewPageContainer'\nimport ReadListContainer from './containers/ReadListContainer'\nimport BookDetailsContainer from './containers/BookDetailsContainer'\nimport SampleBooksContainer from './containers/SampleBooksContainer'\nimport RecommendContainer from './containers/RecommendContainer'\nimport RecommendPageContainer from './containers/RecommendPageContainer'\nimport RegisterContainer from './containers/RegisterContainer'\nimport LoginContainer from './containers/LoginContainer'\nimport PrivateRoute from './components/PrivateRoute'\nimport Notification from './components/Notification'\nimport Footer from './components/Footer'\nimport './form.css'\nimport BookService from './services/BookService'\nimport {\n  BrowserRouter as Router,\n  Switch, Route\n} from 'react-router-dom'\n\nconst App = () => {\n  const [user, setUser] = useState(null)\n  const [message, setMessage] = useState(null)\n\n  const setNotification = (notification) => {\n    setMessage(notification)\n    setTimeout(() => {\n      setMessage(null)\n    }, 5000)\n  }\n\n  useEffect(() => {\n    const loggedUser = window.localStorage.getItem('loggedUser')\n    if (loggedUser) {\n      const user = JSON.parse(loggedUser)\n      setUser(user)\n      BookService.setToken(user.token)\n    }\n  }, [])\n\n  const logoutClick = () => {\n    window.localStorage.removeItem('loggedUser')\n    setUser(null)\n    BookService.setToken(null)\n  }\n\n  return (\n    <div className='page-container'>\n      {user &&\n    <p className='loggedin-user'>{`${user.username} logged in`}<button className='button' onClick={logoutClick}>logout</button></p>}\n      <Notification message={message} />\n      <Router>\n        <Switch>\n          <PrivateRoute component={ReadListContainer} path=\"/list/:id\" isAuth={!!user} />\n          <PrivateRoute component={ListViewPageContainer} path='/list' isAuth={!!user} />\n          <PrivateRoute component={SearchBookPageContainer} path=\"/etsi\" isAuth={!!user} />\n          <PrivateRoute component={BookDetailsContainer} path ='/book/details' isAuth={!!user} />\n          <PrivateRoute component={SampleBooksContainer} path= '/rate' isAuth={!!user} />\n          <PrivateRoute component={RecommendPageContainer} path='/recommendations' isAuth={!!user} />\n          <Route path='/register'>\n            <RegisterContainer notifyUser={setNotification} />\n          </Route>\n          <Route path=\"/\">\n            {user\n              ? (<>\n                <SearchBookContainer />\n                <ListViewContainer />\n                <RecommendContainer />\n              </>\n              )\n              : <LoginContainer setUser={setUser} notifyUser={setNotification} />\n            }\n          </Route>\n        </Switch>\n      </Router>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport '@fortawesome/fontawesome-free/css/all.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}